function rozwiazanie_3(;
    a::Float64 = 0.0023,
    b::Float64 = 0.92,
    x::Vector{Float64} = [0.12405, 0.91431, 0.10834, 0.85059, 0.12749, 0.00229, 0.24533, 0.92019, 0.47079, 0.41084, 0.49808, 0.48485, 0.56825, 0.10354, 0.19295, 0.86146, 0.62022, 0.3192, 0.32533, 0.55792, 0.83055, 0.15974, 0.60888, 0.37311, 0.69139, 0.46714, 0.57096, 0.88476, 0.64228, 0.2317, 0.91185, 0.63057, 0.52558, 0.023, 0.55399, 0.34389, 0.91637, 0.22343, 0.56113, 0.10418, 0.54629, 0.75694, 0.463, 0.07984, 0.60832, 0.74476, 0.16868, 0.77714, 0.54408, 0.83023, 0.24616, 0.23878, 0.35743, 0.53286, 0.12795, 0.75792, 0.65573, 0.1999, 0.28636, 0.49046, 0.60396, 0.90228, 0.02653, 0.20759, 0.74269, 0.27722, 0.25324, 0.02487, 0.33491, 0.1922, 0.65471, 0.79343, 0.39742, 0.03752, 0.82366, 0.57619],
)
P=2^8-1
delta=abs(b-a)/P

N=length(x)

poziomy=a:delta:b
sygnal=zeros(Float64,N)
errors=zeros(Float64,N)

for i in eachindex(errors)

    sygnal[i]=poziomy[argmin(abs.(poziomy.-x[i]))]

    errors[i]=x[i]-sygnal[i]
    #7.847977404844314e-5

end  

return sum(errors.^2)#missing
end

rozwiazanie_3()